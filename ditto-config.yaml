# Ditto Configuration for Kubeflow Deployment
apiVersion: v1
kind: ConfigMap
metadata:
  name: ditto-config
  namespace: ditto-matching
data:
  # Hive connection settings
  hive.host: "localhost"
  hive.port: "10000"
  hive.database: "default"
  hive.user: "hive"
  
  # Ditto model settings
  ditto.model.name: "distilbert"
  ditto.model.max_len: "64"
  ditto.model.batch_size: "32"
  ditto.model.use_gpu: "true"
  ditto.model.fp16: "true"
  ditto.model.checkpoint_path: "/checkpoints/"
  
  # Data processing settings
  ditto.data.input_dir: "/data/input/"
  ditto.data.output_dir: "/data/output/"
  ditto.data.pairs_file: "test_pairs.jsonl"
  ditto.data.results_file: "matching_results.jsonl"
  
  # Pipeline settings
  pipeline.table1_limit: "1000"
  pipeline.table2_limit: "1000"
  pipeline.threshold: "0.5"
  
  # Optional optimizations
  ditto.summarize: "false"
  ditto.dk: "product"
  ditto.da: "del"

---
apiVersion: v1
kind: Secret
metadata:
  name: ditto-secrets
  namespace: ditto-matching
type: Opaque
stringData:
  hive-password: ""
  model-api-key: ""

---
# Persistent Volume for data storage
apiVersion: v1
kind: PersistentVolume
metadata:
  name: ditto-data-pv
spec:
  capacity:
    storage: 20Gi
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  storageClassName: local-storage
  local:
    path: /data/ditto
  nodeAffinity:
    required:
      nodeSelectorTerms:
      - matchExpressions:
        - key: kubernetes.io/hostname
          operator: In
          values:
          - node1

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: ditto-data-pvc
  namespace: ditto-matching
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 20Gi
  storageClassName: local-storage

---
# Service Account for Kubeflow pipeline
apiVersion: v1
kind: ServiceAccount
metadata:
  name: ditto-pipeline-sa
  namespace: ditto-matching

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: ditto-pipeline-role
rules:
- apiGroups: [""]
  resources: ["pods", "pods/log", "configmaps", "secrets"]
  verbs: ["get", "list", "create", "update", "patch", "delete"]
- apiGroups: ["apps"]
  resources: ["deployments"]
  verbs: ["get", "list", "create", "update", "patch", "delete"]
- apiGroups: ["batch"]
  resources: ["jobs"]
  verbs: ["get", "list", "create", "update", "patch", "delete"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: ditto-pipeline-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: ditto-pipeline-role
subjects:
- kind: ServiceAccount
  name: ditto-pipeline-sa
  namespace: ditto-matching